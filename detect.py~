import cv2
import numpy as np 

model = "MobileNetSSD_deploy.caffemodel"
proto = "MobileNetSSD_deploy.prototxt.txt"

CLASSES = ["background", "aeroplane", "sepeda", "bird", "boat",
	"bottle", "bus", "mobil", "cat", "chair", "cow", "diningtable",
	"dog", "horse", "motor", "orang", "pottedplant", "sheep",
	"sofa", "train", "tvmonitor"]
COLORS = np.random.uniform(0, 255, size=(len(CLASSES), 3))

net = cv2.dnn.readNetFromCaffe(proto, model)

cam = cv2.VideoCapture('04.mp4')
fourcc = cv2.VideoWriter_fourcc('F','M','P','4')
out = cv2.VideoWriter('output.mp4', fourcc, 20.0, (640, 480))

while True:
	timer = cv2.getTickCount()
	ret, frame = cam.read()
	frame = cv2.resize(frame, (1280, 720))

	(h, w) = frame.shape[:2]
	blob = cv2.dnn.blobFromImage(
		cv2.resize(frame, (300, 300)), 0.007843, (300, 300), 127.5)

	net.setInput(blob)
	detect = net.forward()

	fps = cv2.getTickFrequency() / (cv2.getTickCount() - timer)

	for i in np.arange(0, detect.shape[2]):
		conf = detect[0, 0, i, 2]
		idx = int(detect[0, 0, i, 1])

		cv2.putText(frame, "FPS = %.2f" %fps, (10,60), 
			cv2.FONT_HERSHEY_SIMPLEX, 1.0, (0, 0, 255), 2)

		if (idx == 2 or idx == 7 or idx == 14 or idx == 15) and conf > 0.2:
			#idx = int(detect[0, 0, i, 1])
			box = detect[0, 0, i, 3:7] * np.array([w, h, w, h])
			(startX, startY, endX, endY) = box.astype("int")

			label = "{}: {:.2f}%".format(CLASSES[idx], conf * 100)
			cv2.rectangle(frame, (startX, startY), (endX, endY), COLORS[idx], 2)
			y = startY - 15 if startY - 15 > 15 else startY + 15
			cv2.putText(frame, label, (startX, y), 
				cv2.FONT_HERSHEY_SIMPLEX, 0.5, COLORS[idx], 2)


	cv2.imshow("Tes", frame)
	out.write(frame)

	key = cv2.waitKey(1) & 0xFF
	if key == ord("q"):
		break

cam.release()
out.release()
cv2.destroyAllWindows()
